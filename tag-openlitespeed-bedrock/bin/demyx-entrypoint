#!/bin/bash
# Demyx
# https://demyx.sh
set -euo pipefail

# Support for old password variable
[[ -n "${PASSWORD:-}" ]] && DEMYX_CODE_PASSWORD="$PASSWORD"

# Create new code-server config directory
if [[ ! -d /home/demyx/.config ]]; then
    mkdir -p /home/demyx/.config
    cp -r "$DEMYX_CONFIG"/code-server /home/demyx/.config
fi

# Migrate old configs to new directory
if [[ -d /home/demyx/.code/data ]]; then
    mkdir -p "$DEMYX_CODE_CONFIG"/data
    cp -r /home/demyx/.code/data/. "$DEMYX_CODE_CONFIG"
    rm -rf /home/demyx/.code/data
fi

if [[ -d /home/demyx/.code/extensions ]]; then
    mkdir -p "$DEMYX_CODE_CONFIG"/extensions
    cp -r /home/demyx/.code/extensions/. "$DEMYX_CODE_CONFIG"
    rm -rf /home/demyx/.code/extensions
fi

# Update oh-my-zsh
DEMYX_ZSHRC_CHECK="$(cat < /home/demyx/.zshrc)"
if [[ "$DEMYX_ZSHRC_CHECK" != *"source \"\$DEMYX_CONFIG\""* ]]; then
    sed -i "s|source \$ZSH/oh-my-zsh.sh|source \"\$DEMYX_CONFIG\"/.demyxrc\nsource \$ZSH/oh-my-zsh.sh|g" /home/demyx/.zshrc
fi

# Remove export GPG_TTY
if [[ "$DEMYX_ZSHRC_CHECK" == *"export GPG_TTY"* ]]; then
    sed -i "/export GPG_TTY/d" /home/demyx/.zshrc
fi

# Remove autoupdate
if [[ -d /home/demyx/.oh-my-zsh/plugins/autoupdate ]]; then
    rm -rf /home/demyx/.oh-my-zsh/plugins/autoupdate
fi
# Double check zsh-autosuggestions
if [[ ! -d /home/demyx/.oh-my-zsh/custom/plugins/zsh-autosuggestions ]]; then
    git clone https://github.com/zsh-users/zsh-autosuggestions.git /home/demyx/.oh-my-zsh/custom/plugins/zsh-autosuggestions
fi

# Remove autoupdate
if [[ -d /home/demyx/.oh-my-zsh/plugins/autoupdate ]]; then
    rm -rf /home/demyx/.oh-my-zsh/plugins/autoupdate
fi
# Double check autoupdate
if [[ ! -d /home/demyx/.oh-my-zsh/custom/plugins/autoupdate ]]; then
    git clone https://github.com/TamCore/autoupdate-oh-my-zsh-plugins.git /home/demyx/.oh-my-zsh/custom/plugins/autoupdate
fi

# Double check powerlevel10k theme
if [[ ! -d /home/demyx/.oh-my-zsh/custom/themes/powerlevel10k ]]; then
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git /home/demyx/.oh-my-zsh/custom/themes/powerlevel10k
fi

# Check for font-family
DEMYX_SETTINGS_CHECK="$(cat < "$DEMYX_CODE_CONFIG"/data/User/settings.json)"
if [[ "$DEMYX_SETTINGS_CHECK" != *"MesloLGS NF"* ]]; then
    sed -i "s|\"editor.quickSuggestions\": true,|\
    \"editor.fontFamily\": \"'MesloLGS NF', Menlo, Monaco, 'Courier New', monospace\",\n\
    \"editor.quickSuggestions\": true,|g" "$DEMYX_CODE_CONFIG"/data/User/settings.json
fi

# Check for NVM directory
if [[ ! -d /home/demyx/.nvm ]]; then
    tar -xzf "$DEMYX_CONFIG"/nvm.tgz -C /home/demyx
fi

# Generate config
sudo -E demyx-config

# Auto install WordPress if it's not installed already
demyx-install

# Install demyx helper plugin
[[ ! -d "$DEMYX"/web/app/mu-plugins ]] && install -d -m 0755 -o demyx -g demyx "$DEMYX"/web/app/mu-plugins
cp "$DEMYX_CONFIG"/bs.php "$DEMYX"/web/app/mu-plugins

# Configure xdebug
if [[ ! -d "$DEMYX"/.vscode ]]; then
    install -d -m 0755 -o demyx -g demyx "$DEMYX"/.vscode
    cp "$DEMYX_CONFIG"/launch.json "$DEMYX"/.vscode
fi

# Set Bedrock to debug mode
sed -i "s|WP_ENV=.*|WP_ENV=development|g" "$DEMYX"/.env

# OpenLiteSpeed admin
sudo -E demyx-admin

# OpenLiteSpeed htpasswd
sudo -E demyx-htpasswd

# Start OLS
sudo -E demyx-lsws

# Generate code-server yaml
echo "auth: $DEMYX_CODE_AUTH
bind-addr: $DEMYX_CODE_BIND_ADDR
cert: false
disable-telemetry: true
extensions-dir: ${DEMYX_CODE_CONFIG}/extensions
password: $DEMYX_CODE_PASSWORD
user-data-dir: ${DEMYX_CODE_CONFIG}/data" > "$DEMYX_CODE_CONFIG"/config.yaml

# Start code-server
code-server "$DEMYX"
